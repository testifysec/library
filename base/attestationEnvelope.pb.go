// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.2
// source: attestationEnvelope.proto

package base

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecutorType int32

const (
	ExecutorType_EXECUTOR_TYPE_UNSPECIFIED ExecutorType = 0
	ExecutorType_COMMAND                   ExecutorType = 1
)

// Enum value maps for ExecutorType.
var (
	ExecutorType_name = map[int32]string{
		0: "EXECUTOR_TYPE_UNSPECIFIED",
		1: "COMMAND",
	}
	ExecutorType_value = map[string]int32{
		"EXECUTOR_TYPE_UNSPECIFIED": 0,
		"COMMAND":                   1,
	}
)

func (x ExecutorType) Enum() *ExecutorType {
	p := new(ExecutorType)
	*p = x
	return p
}

func (x ExecutorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutorType) Descriptor() protoreflect.EnumDescriptor {
	return file_attestationEnvelope_proto_enumTypes[0].Descriptor()
}

func (ExecutorType) Type() protoreflect.EnumType {
	return &file_attestationEnvelope_proto_enumTypes[0]
}

func (x ExecutorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutorType.Descriptor instead.
func (ExecutorType) EnumDescriptor() ([]byte, []int) {
	return file_attestationEnvelope_proto_rawDescGZIP(), []int{0}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestationEnvelope_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_attestationEnvelope_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_attestationEnvelope_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Executor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      ExecutorType `protobuf:"varint,1,opt,name=type,proto3,enum=witness.dev.attestation.ExecutorType" json:"type,omitempty"`
	Arguments []string     `protobuf:"bytes,2,rep,name=arguments,proto3" json:"arguments,omitempty"`
}

func (x *Executor) Reset() {
	*x = Executor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestationEnvelope_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Executor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Executor) ProtoMessage() {}

func (x *Executor) ProtoReflect() protoreflect.Message {
	mi := &file_attestationEnvelope_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Executor.ProtoReflect.Descriptor instead.
func (*Executor) Descriptor() ([]byte, []int) {
	return file_attestationEnvelope_proto_rawDescGZIP(), []int{1}
}

func (x *Executor) GetType() ExecutorType {
	if x != nil {
		return x.Type
	}
	return ExecutorType_EXECUTOR_TYPE_UNSPECIFIED
}

func (x *Executor) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

type AttestationWorkflowEnvelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *Metadata  `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Verify   *Executor  `protobuf:"bytes,2,opt,name=verify,proto3" json:"verify,omitempty"`
	Attest   *Executor  `protobuf:"bytes,3,opt,name=attest,proto3" json:"attest,omitempty"`
	Payload  *anypb.Any `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"` // Field to hold any attestation payload
}

func (x *AttestationWorkflowEnvelope) Reset() {
	*x = AttestationWorkflowEnvelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_attestationEnvelope_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttestationWorkflowEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttestationWorkflowEnvelope) ProtoMessage() {}

func (x *AttestationWorkflowEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_attestationEnvelope_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttestationWorkflowEnvelope.ProtoReflect.Descriptor instead.
func (*AttestationWorkflowEnvelope) Descriptor() ([]byte, []int) {
	return file_attestationEnvelope_proto_rawDescGZIP(), []int{2}
}

func (x *AttestationWorkflowEnvelope) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AttestationWorkflowEnvelope) GetVerify() *Executor {
	if x != nil {
		return x.Verify
	}
	return nil
}

func (x *AttestationWorkflowEnvelope) GetAttest() *Executor {
	if x != nil {
		return x.Attest
	}
	return nil
}

func (x *AttestationWorkflowEnvelope) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_attestationEnvelope_proto protoreflect.FileDescriptor

var file_attestationEnvelope_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x77, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x32, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12,
	0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e,
	0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72,
	0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x82, 0x02, 0x0a, 0x1b, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x69, 0x74,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x06, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x69, 0x74, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x3a, 0x0a,
	0x0c, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x19, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x4f, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x69, 0x66, 0x79, 0x73,
	0x65, 0x63, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x3b,
	0x62, 0x61, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_attestationEnvelope_proto_rawDescOnce sync.Once
	file_attestationEnvelope_proto_rawDescData = file_attestationEnvelope_proto_rawDesc
)

func file_attestationEnvelope_proto_rawDescGZIP() []byte {
	file_attestationEnvelope_proto_rawDescOnce.Do(func() {
		file_attestationEnvelope_proto_rawDescData = protoimpl.X.CompressGZIP(file_attestationEnvelope_proto_rawDescData)
	})
	return file_attestationEnvelope_proto_rawDescData
}

var file_attestationEnvelope_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_attestationEnvelope_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_attestationEnvelope_proto_goTypes = []interface{}{
	(ExecutorType)(0),                   // 0: witness.dev.attestation.ExecutorType
	(*Metadata)(nil),                    // 1: witness.dev.attestation.Metadata
	(*Executor)(nil),                    // 2: witness.dev.attestation.Executor
	(*AttestationWorkflowEnvelope)(nil), // 3: witness.dev.attestation.AttestationWorkflowEnvelope
	(*anypb.Any)(nil),                   // 4: google.protobuf.Any
}
var file_attestationEnvelope_proto_depIdxs = []int32{
	0, // 0: witness.dev.attestation.Executor.type:type_name -> witness.dev.attestation.ExecutorType
	1, // 1: witness.dev.attestation.AttestationWorkflowEnvelope.metadata:type_name -> witness.dev.attestation.Metadata
	2, // 2: witness.dev.attestation.AttestationWorkflowEnvelope.verify:type_name -> witness.dev.attestation.Executor
	2, // 3: witness.dev.attestation.AttestationWorkflowEnvelope.attest:type_name -> witness.dev.attestation.Executor
	4, // 4: witness.dev.attestation.AttestationWorkflowEnvelope.payload:type_name -> google.protobuf.Any
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_attestationEnvelope_proto_init() }
func file_attestationEnvelope_proto_init() {
	if File_attestationEnvelope_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_attestationEnvelope_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestationEnvelope_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Executor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_attestationEnvelope_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttestationWorkflowEnvelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_attestationEnvelope_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_attestationEnvelope_proto_goTypes,
		DependencyIndexes: file_attestationEnvelope_proto_depIdxs,
		EnumInfos:         file_attestationEnvelope_proto_enumTypes,
		MessageInfos:      file_attestationEnvelope_proto_msgTypes,
	}.Build()
	File_attestationEnvelope_proto = out.File
	file_attestationEnvelope_proto_rawDesc = nil
	file_attestationEnvelope_proto_goTypes = nil
	file_attestationEnvelope_proto_depIdxs = nil
}
